import functools
from .models import User, Profile, ProfileSearch, ProfileLikes
from telebot import types
from difflib import SequenceMatcher
from .tools import log


# @log
# def gen_markup_for_city(name, is_search):
#     """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
#     :param str name: –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     :param bool is_search: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –∏–ª–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
#     :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
#     :rtype: InlineKeyboardMarkup
#     """
#     markup = types.InlineKeyboardMarkup()
#     markup.row_width = 2
#     cities = City.objects.all()
#
#     # print(cities, "-------------------------")
#
#     for city in cities:
#         if SequenceMatcher(None, name, city.name).ratio() > 0.8:
#             callback = 'search_' if is_search else ''
#             markup.add(types.InlineKeyboardButton(
#                 text=f"{city.name}, {city.region}",
#                 callback_data=f"city_{callback}{city.pk}"
#             ))
#     markup.add(types.InlineKeyboardButton(
#         text="ü§∑üèª‚Äç‚ôÇÔ∏è–ì–æ—Ä–æ–¥–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ",
#         callback_data="city_empty"
#     ))
#     return markup


@log
def gen_markup_for_profile(user):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param User user: –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–∞
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    :rtype: InlineKeyboardMarkup
    """
    markup = types.InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(
        types.InlineKeyboardButton(
            text="üë§–ò–º—è",
            callback_data="profile_edit_name"
        ),
        types.InlineKeyboardButton(
            text="üî¢–í–æ–∑—Ä–∞—Å—Ç",
            callback_data="profile_edit_age"
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text="üöπ–ü–æ–ª",
            callback_data="profile_edit_sex"
        ),
        # types.InlineKeyboardButton(
        #     text="üè†–ì–æ—Ä–æ–¥",
        #     callback_data="profile_edit_city"
        # )
    )
    markup.add(
        types.InlineKeyboardButton(
            text="üñåÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ",
            callback_data="profile_edit_description"
        )
    )
    markup.add(
        types.InlineKeyboardButton(
            text="üñº–§–æ—Ç–æ",
            callback_data="profile_edit_avatar"
        )
    )
    if user.profile.is_active:
        text_active = '‚úÖ–ê–Ω–∫–µ—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞'
    else:
        text_active = '‚õî–ê–Ω–∫–µ—Ç–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞'
    markup.add(
        types.InlineKeyboardButton(
            text=text_active,
            callback_data="profile_edit_active"
        )
    )
    return markup


@log
def gen_markup_for_profile_search():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    :rtype: InlineKeyboardMarkup
    """
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç",
        callback_data="search_age"
    ))
    markup.add(types.InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª",
        callback_data="search_sex"
    ))
    # markup.add(types.InlineKeyboardButton(
    #     text="–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥",
    #     callback_data="search_city"
    # ))
    return markup


@log
def gen_markup_for_profile_search():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    :rtype: InlineKeyboardMarkup
    """
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç",
        callback_data="search_age"
    ))
    markup.add(types.InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª",
        callback_data="search_sex"
    ))
    markup.add(types.InlineKeyboardButton(
        text="–°–±—Ä–æ—Å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π",
        callback_data="search_reset"
    ))
    return markup


@log
def gen_markup_for_age_search():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤ –∏—Å–∫–æ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    :rtype: InlineKeyboardMarkup
    """
    markup = types.InlineKeyboardMarkup()
    markup.row_width = 2
    age_range = list(range(13, 55, 5))
    for index in range(0, 8, 2):
        first_diapason = f'{age_range[index]}-{age_range[index + 1]}'
        second_diapason = f'{age_range[index + 1]}-{age_range[index + 2]}'
        markup.add(
            types.InlineKeyboardButton(
                text=first_diapason,
                callback_data=f'search_age_{first_diapason}'
            ),
            types.InlineKeyboardButton(
                text=second_diapason,
                callback_data=f'search_age_{second_diapason}'
            )
        )
    markup.add(
        types.InlineKeyboardButton(
            text='50-100',
            callback_data='search_age_50-100'
        ),
        types.InlineKeyboardButton(
            text='–õ—é–±–æ–π –≤–æ–∑—Ä–∞—Å—Ç',
            callback_data='search_age_13-100'
        )
    )
    return markup


@log
def gen_markup_for_sex_search():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –∏—Å–∫–æ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    :rtype: InlineKeyboardMarkup
    """
    markup = types.InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(
        types.InlineKeyboardButton(
            text='üï∫üèª',
            callback_data='search_sex_M'
        ),
        types.InlineKeyboardButton(
            text='üíÉüèª',
            callback_data='search_sex_W'
        ),
        types.InlineKeyboardButton(
            text='–î—Ä—É–≥–æ–π',
            callback_data='search_sex_O'
        ),
        types.InlineKeyboardButton(
            text='–í—Å–µ',
            callback_data='search_sex_A'
        ),
    )
    return markup


@log
def gen_main_markup():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    :return: Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    :rtype: ReplyKeyboardMarkup
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row_width = 2
    markup.add(
        types.KeyboardButton("üîç–ü–æ–∏—Å–∫"),
        types.KeyboardButton("‚öô–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞")
    )
    markup.add(
        types.KeyboardButton("üòé–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    )
    markup.add(
        types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º—É —Ç—ã –Ω—Ä–∞–≤–∏—à—å—Å—è")
    )
    return markup


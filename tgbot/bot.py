from .abstract import AbstractBot
from django.conf import settings
from .tools import log, check_is_registrations
from .models import User
import os
import logging
from .markup import gen_markup_for_profile


class Bot(AbstractBot):

    def __init__(self, bot):
        self.bot = bot
        self.class_user = User
        # self._gen_markup_for_profile = gen_markup_for_profile

    @log
    def send_message_to_admin(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É –≤ –¢–ì
        :param Message message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"""
        self.bot.send_message(
            chat_id=settings.ADMIN_CHAT_ID,
            text=message,
            parse_mode='HTML'
        )
        # send_email(bug)

    @log
    def send_bug_message(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ /bug –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞.
        –°–æ–æ–±—â–µ–Ω–∏–µ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å –∏ —Ñ–∞–π–ª
        :param Message message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        text = '<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞</b>\n'
        text += '–£–∫–∞–∂–∏—Ç–µ –≤ –∫–∞–∫–æ–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏ –∫–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞'
        message = self.bot.send_message(
            chat_id=message.chat.id,
            text=text,
            parse_mode='HTML'
        )
        self.bot.register_next_step_handler(message, self._process_bug_step)

    @log
    def _process_bug_step(self, message):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤ –±–æ—Ç–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param Message message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        bug = message.text
        text = '<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—éüëç</b>\n'
        text += '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏!'
        self.bot.reply_to(
            message=message,
            text=text,
            parse_mode='HTML'
        )
        bug = f'BUG from {message.chat.id}:\n C–æ–æ–±—â–µ–Ω–∏–µ: {bug} \n\n'
        bug += f'<a href="tg://user?id={message.chat.id}">–°—Å—ã–ª–∫–∞</a>  @{message.chat.username}'
        logging.warning(message)
        self.send_message_to_admin(bug)

    @log
    def show_user_profile(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ /profile –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–ª–∏ –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
        :param Message message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        user = User.objects.get(chat_id=message.chat.id)
        text = f'<b>üë§–ò–º—è: </b>{user.profile.name}\n'
        text += f'<b>üî¢–í–æ–∑—Ä–∞—Å—Ç: </b>{user.profile.age}\n'
        if user.profile.sex == 'M':
            text += '<b>üöπ–ü–æ–ª: </b> –ú—É–∂—á–∏–Ω–∞\n'
        elif user.profile.sex == 'W':
            text += '<b>üö∫–ü–æ–ª: </b> –ñ–µ–Ω—â–∏–Ω–∞\n'
        elif user.profile.sex == 'O':
            text += '<b>–ü–æ–ª: </b> –î—Ä—É–≥–æ–µ\n'

        text += f'<b>üñåÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ: </b>{user.profile.description}\n\n'
        text += '<i>–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å</i>\n'
        text += '–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:'
        self.bot.send_photo(
            chat_id=user.chat_id,
            photo=self.get_user_avatar(user),
            caption=text,
            reply_markup=gen_markup_for_profile(user),
            parse_mode='HTML'
        )

    # –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –ø–æ –¥–µ—Ñ–æ–ª—Ç—É
    @log
    def get_user_avatar(self, user):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param User user: –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–∞
        :return: –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :rtype: bytes
        """
        save_path = os.path.join(settings.MEDIA_ROOT, 'images/avatars/')
        file_name = f"{user.chat_id}.jpg"
        try:
            complete_name = os.path.join(save_path, file_name)
            with open(complete_name, "rb") as img:
                avatar = img.read()
                return avatar
        except:
            complete_name = os.path.join(
                settings.STATIC_ROOT, 'tgbot/images/unknown.webp'
            )
            with open(complete_name, "rb") as img:
                avatar = img.read()
                return avatar